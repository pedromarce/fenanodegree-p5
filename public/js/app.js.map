{"version":3,"sources":["app/application.js"],"names":[],"mappingsfile":"public\\js\\app.js","sourcesContent":["'use strict';\r\n\r\nfunction appViewModel() {\r\n\r\n  var self = this;\r\n\r\n  // Private Variables\r\n  var markers = {};\r\n  var storedPlaces = ko.observableArray([]);\r\n  var map, servicePlaces, markerInfo;\r\n  var listResults = ko.observableArray([]);\r\n\r\n  // DOM variables\r\n  self.searchText = ko.observable(\"\");\r\n  self.filterText = ko.observable(\"\");\r\n  self.selectedMarker = ko.observable(\"\");\r\n  self.instagramPics = ko.observableArray([]);\r\n  self.places = ko.computed(function () {\r\n    var result;\r\n    var returnArray = [];\r\n    // Delete current markers from map\r\n    for (var marker in markers) {\r\n      if (markers.hasOwnProperty(marker)) {\r\n        markers[marker].setMap(null);\r\n      };\r\n    };\r\n    // Add results markers into map\r\n    for (var i = 0; i < listResults().length; i++) {\r\n      result = listResults()[i];\r\n      // filter results not matching filtersearch\r\n      if (self.filterText() === \"\" || result.name.indexOf(self.filterText()) > -1) {\r\n        returnArray.push(result);\r\n        if (!markers[result.place_id]) {\r\n          markers[result.place_id] = new google.maps.Marker({\r\n            position: result.geometry.location,\r\n            map: map,\r\n            title: result.name,\r\n            animation: google.maps.Animation.DROP\r\n          });\r\n          markers[result.place_id].info = '<div class=\"infowindow\"><h4 class=\"text-center\">' + result.name + '</h4>' +\r\n            '<h5 class=\"text-center\">' + result.vicinity + '</h5>' +\r\n            '<div class=\"text-center\"><button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\".more-info-modal\">Pictures</button></div>' +\r\n            '</div>';\r\n          // Define click function for marker\r\n          markers[result.place_id].select = function () {\r\n            var marker = this;\r\n            var css;\r\n            self.selectedMarker(result.name);\r\n            markerInfo.setContent(marker.info);\r\n            markerInfo.open(map, marker);\r\n            marker.setAnimation(google.maps.Animation.BOUNCE);\r\n            setTimeout(function () {\r\n              marker.setAnimation(null);\r\n            }, 1450);\r\n            // retrieve Instagram pictures for the marker selected\r\n            $.when($.getJSON('https://api.instagram.com/v1/media/search?lat=' + marker.position.H.toString() + '&lng=' + marker.position.L + '&distance=15&client_id=3118900e545540e1942dea40b20433ad&callback=?')).then(function (response, textStatus, jqXHR) {\r\n            \tself.instagramPics([]);\r\n            \tfor (var i=0;i<response.data.length;i++) {\r\n            \t\tif (i === 0 ) { \r\n            \t\t\tcss = \"item active\";\r\n            \t\t} else {\r\n            \t\t\tcss = \"item\";\r\n            \t\t}\r\n            \t\tself.instagramPics.push({link: response.data[i].images.standard_resolution.url, alt: 'Instagram Image', css: css});\r\n            \t}\r\n            });\r\n          };\r\n          // bind event to defined function\r\n          markers[result.place_id].addListener('click', function () {\r\n            this.select();\r\n          });\r\n          result.marker = markers[result.place_id];\r\n        } else {\r\n          markers[result.place_id].setMap(map);\r\n        }\r\n      }\r\n    }\r\n    return returnArray;\r\n  });\r\n\r\n  self.focusMarker = function(result) {\r\n\tmarkers[result.place_id].select();  \t\r\n  };\t\r\n\r\n  self.search = function () {\r\n    var request = {};\r\n    if (self.searchText() !== '') {\r\n      request.location = map.center;\r\n      request.radius = '5000';\r\n      request.name = self.searchText();\r\n      servicePlaces.nearbySearch(request, searchResults);\r\n    }\r\n  };\r\n\r\n  function searchResults(results, status) {\r\n    listResults.removeAll();\r\n    for (var i = 0; i < results.length; i++) {\r\n      listResults.push(results[i]);\r\n    }\r\n  };\r\n\r\n  GoogleMapsLoader.LIBRARIES = [\"places\"];\r\n  GoogleMapsLoader.API = \"AIzaSyDV93itKLeicZYEy-9Z1s7JG2aodUGACdw\";\r\n  GoogleMapsLoader.load(function (google) {\r\n    map = new google.maps.Map(document.getElementById('map'), {\r\n      center: {\r\n        lat: 41.3833,\r\n        lng: 2.1833\r\n      },\r\n      zoom: 14\r\n    });\r\n    servicePlaces = new google.maps.places.PlacesService(map);\r\n    var request = {};\r\n    request.location = {\r\n      lat: 41.3833,\r\n      lng: 2.1833\r\n    };\r\n    request.radius = '5000';\r\n    request.name = 'museu';\r\n    servicePlaces.nearbySearch(request, searchResults);\r\n    markerInfo = new google.maps.InfoWindow({\r\n      maxWidth: 300\r\n    });\r\n  });\r\n};\r\n\r\n\r\n$(function () {\r\n  ko.applyBindings(new appViewModel());\r\n});\r\n"]}